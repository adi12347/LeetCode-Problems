/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void push(struct ListNode **head,int data)
    {
        struct ListNode *ptr=new ListNode(data);
        //ptr->val=data;
        ptr->next=*head;
        *head=ptr;
    }
    void reverse(struct ListNode **head)
    {
        struct ListNode *temp=*head;
        struct ListNode *prev=NULL;
        struct ListNode *next;
        while(temp)
        {
            next=temp->next;
            temp->next=prev;
            prev=temp;
            temp=next;
        }
        *head=prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        struct ListNode *res=NULL;
        struct ListNode *temp1=l1;
        struct ListNode *temp2=l2;
        int carry=0;
        int sum=0;
        while(temp1!=NULL || temp2!=NULL)
        {
            sum=carry+(temp1?temp1->val:0)+(temp2?temp2->val:0);
            carry=sum/10;
            sum=sum%10;
            push(&res,sum);
            if(temp1)
            {
            temp1=temp1->next;
            }
            if(temp2)
            {
                temp2=temp2->next;
            }
        }
        if(carry>0)
        {
            push(&res,carry);
        }
        reverse(&res);
        return res;
        
    }
};
